{"ast":null,"code":"var _jsxFileName = \"F:\\\\client\\\\src\\\\Components\\\\Weathers\\\\Weathers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Weather from '../Weather/Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction History() {\n  _s();\n\n  const [weathers, setWeathers] = useState([]); //get latest weathers of 20 cities....\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/weather/\").then(response => {\n      let data = response.data;\n      setWeathers(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [weathers.map((obj, index) => {\n            let {\n              cityname,\n              country,\n              lon,\n              lat,\n              dayone\n            } = obj;\n            let {\n              date,\n              mintemp,\n              maxtemp,\n              avgtemp,\n              text,\n              icon,\n              code\n            } = dayone;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: /*#__PURE__*/_jsxDEV(Weather, {\n                title: cityname,\n                lat: lat,\n                long: lon,\n                maxtemp: maxtemp,\n                mintemp: mintemp,\n                avgtemp: avgtemp,\n                text: text,\n                country: country,\n                date: date,\n                code: code,\n                isCard: true\n              }, obj._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this);\n          }), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(History, \"HMZs/fGbBpPibEC45JZuCMMTK/U=\");\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useEffect","useState","axios","Weather","History","weathers","setWeathers","get","then","response","data","map","obj","index","cityname","country","lon","lat","dayone","date","mintemp","maxtemp","avgtemp","text","icon","code","_id"],"sources":["F:/client/src/Components/Weathers/Weathers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Weather from '../Weather/Weather';\r\n\r\nfunction History() {\r\n\r\n    const [weathers, setWeathers] = useState([])\r\n\r\n    //get latest weathers of 20 cities....\r\n    useEffect(() => {\r\n\r\n        axios.get(\"http://localhost:5000/weather/\").then((response) => {\r\n            let data = response.data\r\n            setWeathers(data);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className='col'>\r\n                <div className='container'>\r\n                    <div className='row' >\r\n\r\n                        {weathers.map((obj, index) => {\r\n\r\n                            let { cityname, country, lon, lat, dayone } = obj\r\n                            let { date, mintemp, maxtemp, avgtemp, text, icon, code } = dayone\r\n                            return (\r\n                                <div className='col-3'>\r\n                                    <Weather key={obj._id} title={cityname}\r\n                                        lat={lat} long={lon} maxtemp={maxtemp}\r\n                                        mintemp={mintemp} avgtemp={avgtemp} text={text}\r\n                                        country={country} date={date} code={code} isCard\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })};\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EAEf,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CAFe,CAIf;;EACAD,SAAS,CAAC,MAAM;IAEZE,KAAK,CAACK,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAkDC,QAAD,IAAc;MAC3D,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;MACAJ,WAAW,CAACI,IAAD,CAAX;IACH,CAHD;EAIH,CANQ,EAMN,EANM,CAAT;EAQA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,uBACI;QAAK,SAAS,EAAC,WAAf;QAAA,uBACI;UAAK,SAAS,EAAC,KAAf;UAAA,WAEKL,QAAQ,CAACM,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;YAE1B,IAAI;cAAEC,QAAF;cAAYC,OAAZ;cAAqBC,GAArB;cAA0BC,GAA1B;cAA+BC;YAA/B,IAA0CN,GAA9C;YACA,IAAI;cAAEO,IAAF;cAAQC,OAAR;cAAiBC,OAAjB;cAA0BC,OAA1B;cAAmCC,IAAnC;cAAyCC,IAAzC;cAA+CC;YAA/C,IAAwDP,MAA5D;YACA,oBACI;cAAK,SAAS,EAAC,OAAf;cAAA,uBACI,QAAC,OAAD;gBAAuB,KAAK,EAAEJ,QAA9B;gBACI,GAAG,EAAEG,GADT;gBACc,IAAI,EAAED,GADpB;gBACyB,OAAO,EAAEK,OADlC;gBAEI,OAAO,EAAED,OAFb;gBAEsB,OAAO,EAAEE,OAF/B;gBAEwC,IAAI,EAAEC,IAF9C;gBAGI,OAAO,EAAER,OAHb;gBAGsB,IAAI,EAAEI,IAH5B;gBAGkC,IAAI,EAAEM,IAHxC;gBAG8C,MAAM;cAHpD,GAAcb,GAAG,CAACc,GAAlB;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA,QADJ;UASH,CAbA,CAFL;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA0BH;;GAvCQtB,O;;KAAAA,O;AAyCT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}